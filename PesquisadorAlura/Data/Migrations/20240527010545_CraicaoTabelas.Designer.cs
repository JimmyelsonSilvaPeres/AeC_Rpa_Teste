// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240527010545_CraicaoTabelas")]
    partial class CraicaoTabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.19");

            modelBuilder.Entity("Domain.Entities.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("con_id");

                    b.Property<string>("Excecao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TextoConsultado")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("con_texto_consulta");

                    b.HasKey("Id");

                    b.ToTable("aec_consulta", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pro_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pro_nome");

                    b.HasKey("Id");

                    b.ToTable("aec_professor", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Resultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("res_id");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("INTEGER")
                        .HasColumnName("res_carga_horaria");

                    b.Property<int>("ConsultaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("res_con_id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("res_descricao");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("res_titulo");

                    b.HasKey("Id");

                    b.HasIndex("ConsultaId");

                    b.ToTable("aec_resultado", (string)null);
                });

            modelBuilder.Entity("ProfessorResultado", b =>
                {
                    b.Property<int>("ProfessoresId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResultadosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProfessoresId", "ResultadosId");

                    b.HasIndex("ResultadosId");

                    b.ToTable("ProfessorResultado");
                });

            modelBuilder.Entity("Domain.Entities.Resultado", b =>
                {
                    b.HasOne("Domain.Entities.Consulta", "Consulta")
                        .WithMany("Resultados")
                        .HasForeignKey("ConsultaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("ProfessorResultado", b =>
                {
                    b.HasOne("Domain.Entities.Professor", null)
                        .WithMany()
                        .HasForeignKey("ProfessoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Resultado", null)
                        .WithMany()
                        .HasForeignKey("ResultadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Consulta", b =>
                {
                    b.Navigation("Resultados");
                });
#pragma warning restore 612, 618
        }
    }
}
